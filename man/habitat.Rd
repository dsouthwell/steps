% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/habitat-class.R
\name{as.habitat}
\alias{as.carrying_capacity}
\alias{as.habitat}
\alias{as.habitat_suitability}
\alias{as.populations}
\alias{carrying_capacity_function}
\alias{habitat_suitability}
\alias{habitat_suitability<-}
\alias{is.carrying_capacity}
\alias{is.habitat}
\alias{is.habitat_suitability}
\alias{is.populations}
\alias{patches}
\alias{pop_patch_name}
\alias{population}
\alias{population<-}
\alias{print.habitat}
\title{habitat objects}
\usage{
as.habitat(features, ...)

is.habitat(x)

\method{print}{habitat}(x, ...)

as.habitat_suitability(x, ...)

is.habitat_suitability(x)

habitat_suitability(habitat)

habitat_suitability(habitat, updated_habitat_suitability_map) <- value

as.populations(x, ...)

is.populations(x)

population(habitat)

population(habitat) <- value

pop_patch_name(habitat)

patches(habitat, which_stages = NULL)

as.carrying_capacity(x, ...)

is.carrying_capacity(x)

carrying_capacity_function(x, type = c("exp", "logit", "linear", "custom"),
  ...)
}
\arguments{
\item{features}{A named list of landscapes (or seascape) features and parameters used for setting up the habitat for dynamic metapopulation models.}

\item{x}{an object to print or test as a habitat object}

\item{type}{model form for converting occurrence to carrying capacity.}

\item{\dots}{further arguments passed to or from other methods.}

\item{x}{a raster, raster stack or raster brick of habitat suitability for the species.}

\item{x}{Starting populations for each life-history stage. Either a \link[sp]{SpatialPointsDataFrame} which has the population size for each life history linked to a coordinate within the extent of the habitat_suitability_map. A raster of population per-cell for each life-history stage, or finally a single integer of population size for each life-histroy stage.}

\item{x}{a raster of species habitit suitability (occupancy).}

\item{list}{parameters used to convert a habitat suitability map to carrying capacity.}
}
\value{
an object of class \code{habitat}.
}
\description{
Habitat is an object that contains the spatial distribution of the populations, habitat suitability and carrying capacity for the landscape or seascape. Habitat requires either predefined rasters of population size for each life-history, habitat suitability map (e.g. a species distribution model) and carrying capacity. However, habitat suitability map is the only mandatory raster, population and carrying capacity can be provided as numeric values or functions which manipulate the habitat suitability map rasters to generate population per-cell and/or carrying capacity per-cell.
}
\examples{
library(raster)
library(dhmpr)
set.seed(42)
xy <- expand.grid(x=seq(145, 150, 0.1), y=seq(-40, -35, 0.1))
Dd <- as.matrix(dist(xy))
w <- exp(-1/nrow(xy) * Dd)
Ww <- chol(w)
xy$z <- t(Ww) \%*\% rnorm(nrow(xy), 0, 0.1)
coordinates(xy) <- ~x+y
r <- rasterize(xy, raster(points2grid(xy)), 'z')
proj4string(r) <- '+init=epsg:4283'
r[] <- scales::rescale(r[],to=c(0,1))

## create a habitat from a list containing a habitat suitability raster and numeric values for population and carrying capacity.
hsm <- as.habitat_suitability(r)
pops <- as.populations(c(80,20,10))
cc <- as.carrying_capacity(100)

features <- list('habitat_suitability_map'=hsm,
                 'population'=pops,
                 'carrying_capacity'=cc)
habs <- as.habitat(features)
                       
## create a habitat from a list containing a habitat suitability raster, a SpatialPointsDataFrame for population and numeric values carrying capacity.
random_populations <- sampleRandom(r, size=50, na.rm=TRUE, sp=TRUE) 
random_populations@data <- as.data.frame(t(rmultinom(50, size = 100, prob = c(0.8,0.2,0.1))))
features <- list('habitat_suitability_map'=as.habitat_suitability(r),
                       'population'=as.populations(random_populations),
                       'carrying_capacity'=as.carrying_capacity(100))
                                                
habs <- as.habitat(features)
# print method
print(habitat)
# Underlying habitat suitability map
hsm <- as.habitat_suitability(r)
hsm <- as.habitat_suitability(r)
is.habitat_suitability(hsm)
# get and set the features
habitat_suitability(habitat)
# Underlying habitat suitability map
random_populations <- sampleRandom(r, size=50, na.rm=TRUE, sp=TRUE) 
random_populations@data <- as.data.frame(t(rmultinom(50, size = 100, prob = c(0.8,0.2,0.1))))
population <- as.populations(random_populations)
is.populations(pops)
# get and set the population
population(habitat)
population(habitat) <- population(habitat) * 2
population(habitat)
get and set the features
patches(habitat)
is.populations(pops)
}
\author{
Nick Golding & Skip Woolley

Skipton Woolley
}

