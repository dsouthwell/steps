% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/habitat-class.R
\name{as.habitat}
\alias{as.habitat}
\alias{is.habitat}
\alias{print.habitat}
\alias{as.habitat_suitability}
\alias{is.habitat_suitability}
\alias{habitat_suitability}
\alias{habitat_suitability<-}
\alias{as.populations}
\alias{is.populations}
\alias{populations}
\alias{populations<-}
\alias{as.carrying_capacity}
\alias{is.carrying_capacity}
\alias{carrying_capacity}
\alias{carrying_capacity<-}
\alias{area}
\title{habitat objects}
\usage{
as.habitat(features, ...)

is.habitat(x)

\method{print}{habitat}(x, ...)

as.habitat_suitability(x, ...)

is.habitat_suitability(x)

habitat_suitability(habitat, time_step = 1)

habitat_suitability(habitat, time_step = 1) <- value

as.populations(x, ...)

is.populations(x)

populations(habitat, which_stages = NULL)

populations(habitat, which_stages = NULL) <- value

as.carrying_capacity(x, ...)

is.carrying_capacity(x)

carrying_capacity(habitat, time_step = 1)

carrying_capacity(habitat, time_step = 1) <- value

area(habitat)
}
\arguments{
\item{features}{A named list of landscapes (or seascape) features and parameters used for setting up the habitat for dynamic meta-population models.}

\item{\dots}{further arguments passed to or from other methods.}

\item{x}{an object to print or test as a habitat object}

\item{x}{a raster, raster stack or raster brick of habitat suitability for the species.}
}
\value{
an object of class \code{habitat}.
}
\description{
Habitat is an object that contains the spatial distribution of the populations, habitat suitability and carrying capacity for the landscape or seascape. Habitat requires either predefined rasters of population size for each life-history, habitat suitability map (e.g. a species distribution model) and carrying capacity. However, habitat suitability map is the only mandatory raster, population and carrying capacity can be provided as numeric values or functions which manipulate the habitat suitability map rasters to generate population per-cell and/or carrying capacity per-cell.

carrying_capacity_function <- function(x, type=c('exp','logit','linear','custom'), custom_fun=NULL, params, ...){
  print(as.list(match.call(x)))
  type <- match.arg(type)
  switch(type,
    exp = exp((a*x)-b),
    linear = a*(x)-b,
    logit = a+(1/(1+exp(-b*x+c))),
    custom = custom_fun)
}
}
\details{
parameter details for habitat function.
\itemize{
\item{habitat_suitability_map}{ An object of class 'habitat_suitability', which must contain at least a single \link[raster]{raster} that represents habitat suitability for the species. This need to be probabilistic (between zero and one). Functions that manipulate the landscape will alter this throughout the dynamic meta-population simulations. This can also be a \link[raster]{stack} or \link[raster]{brick}, if a raster stack or brick is provided, then then each raster in the stack/brick represents habitat suitability at temporal time steps. For example, 10 rasters could represent habitat suitability over a ten year period, one per year.}  
\item{populations}{ List starting populations for each life-history stage. Either a \link[sp]{SpatialPointsDataFrame} which has the population size for each life history linked to a coordinate within the extent of the habitat_suitability_map. A raster of population per-cell for each life-history stage, or finally a single integer of population size for each life-histroy stage.}
\item{carrying_capacity}{ List either a raster that represent the carrying capacity of adult populations for each cell; a function which manipulates the habitat_suitability_map and converts it to carrying capacity; or finally an integer which presents a maximum carrying capacity for all cells.}
}
}
\examples{

library(raster)
library(dhmpr)
set.seed(42)
xy <- expand.grid(x=seq(145, 150, 0.1), y=seq(-40, -35, 0.1))
Dd <- as.matrix(dist(xy))
w <- exp(-1/nrow(xy) * Dd)
Ww <- chol(w)
xy$z <- t(Ww) \%*\% rnorm(nrow(xy), 0, 0.1)
coordinates(xy) <- ~x+y
r <- rasterize(xy, raster(points2grid(xy)), 'z')
proj4string(r) <- '+init=epsg:4283'
r[] <- scales::rescale(r[],to=c(0,1))

## create a habitat from a list containing a habitat suitability raster and
## numeric values for population and carrying capacity.
hsm <- as.habitat_suitability(r)
pops <- as.populations(c(80,20,10))
cc <- as.carrying_capacity(r*10)

features <- list(hsm,pops,cc)
habitat <- as.habitat(features)
                       
## create a habitat from a list containing a habitat suitability raster,
## a SpatialPointsDataFrame for population and numeric values carrying capacity.
random_populations <- sampleRandom(r, size=50, na.rm=TRUE, sp=TRUE) 
random_populations@data <- as.data.frame(t(rmultinom(50, size = 100, prob = c(0.8,0.2,0.1))))
features <- list('habitat_suitability_map'=as.habitat_suitability(r),
                 'population'=as.populations(random_populations),
                 'carrying_capacity'=as.carrying_capacity(r*10))
                                                
habitat <- as.habitat(features)
# print method
print(habitat)
 
# Underlying habitat suitability map
hsm <- as.habitat_suitability(r)

is.habitat_suitability(hsm)

habitat_suitability(habitat)

as.populations(c(80,60,20))

is.populations(pops)

# get and set the population
populations(habitat)
as.carrying_capacity(r*10)
is.carrying_capacity(cc)
}
\author{
Nick Golding & Skip Woolley
}
