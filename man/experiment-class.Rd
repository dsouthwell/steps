% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experiment-class.R
\name{experiment}
\alias{experiment}
\alias{is.experiment}
\alias{print.experiment}
\alias{habitat}
\alias{habitat<-}
\alias{transition}
\alias{transition<-}
\alias{as.matrix.experiment}
\title{experiment object}
\usage{
experiment(...)

is.experiment(x)

\method{print}{experiment}(x, ...)

habitat(experiment)

habitat(experiment) <- value

transition(experiment)

transition(experiment) <- value

\method{as.matrix}{experiment}(experiment, ...)
}
\arguments{
\item{\dots}{further arguments passed to or from other methods.}

\item{x}{an object to print or test as a habitat object}

\item{experiment}{an object of class \code{experiment}}

\item{value}{an object of class \code{habitat} (for
\code{habitat(experiment) <- value}) or the value to assign to the
\code{distance}, \code{area}, \code{population}, or \code{features}
elements of a \code{habitat} object}

\item{dots}{that can contain:
times List The number of time steps of the least frequent discrete event. e.g. yearly population growth/management.
dynamics a population dynamics such as stage-based transition matices, See \link[dhmpr]{as.transition}.
population a population object, see \link[dhmpr]{as.population}
habitat a habitat object, see \link[dhmpr]{as.habitat}.
dispersal a dispersal object, see \link[dhmpr]{as.dispersal}. 
module a module object, see \link[dhmpr]{as.module}, which is used to manipulate the habitat.}
}
\description{
code{experiment} is an object which stores all the relevent population dynamics, population size(s), habitat feature, dispersal parameters and modules and sets up a spatially explicit dynamic metapopulation models for \link[dhmpr]{simulation}.

#' @rdname experiment-class
#' @export
`dispersal<-` <- function (experiment, value) {
  stopifnot(is.experiment(experiment))
  stopifnot(any(sapply(experiment,is.dispersal)))
  attr(experiment, 'dispersal') <- value
  return (experiment)
}
}
\examples{

## Create transition matrix
mat <- matrix(c(.53,0,.52,0.1,0.77,0,0,0.12,0.9),nrow = 3,ncol = 3,byrow = TRUE)
colnames(mat) <- rownames(mat) <- c('larvae','juvenile','adult')
trans <- as.transition(mat)

## Create population
pop <- as.population(data.frame('larvae'=80,'juvenile'=29,'adult'=5) )

## Create habitat
library(raster)
set.seed(42)
xy <- expand.grid(x=seq(145, 150, 0.1), y=seq(-40, -35, 0.1))
Dd <- as.matrix(dist(xy))
w <- exp(-1/nrow(xy) * Dd)
Ww <- chol(w)
xy$z <- t(Ww) \%*\% rnorm(nrow(xy), 0, 0.1)
coordinates(xy) <- ~x+y
r <- rasterize(xy, raster(points2grid(xy)), 'z')
hab <- raster(r)
res(hab) <- 0.01
hab <- resample(r, hab)
proj4string(hab) <- '+init=epsg:4283'
habs <- as.habitat(list(hab,population = pop))
## Create dispersal
dispersal_params <- list(alpha=list('larvae'=2,'juvenile'=0,'adult'=3),
               probability=list('larvae'=0.2,'juvenile'=0,'adult'=0.6))

disp <- as.dispersal(dispersal_params)

pop_hab_experiment_w_dispersal <- experiment(trans,habs,disp)

## create a module for manipulating the landscape see \\link[dhmpr]{as.module} for more details.
##Create a named list with corresponding parameters and values
module_params = list(habitat=habs,
             fire_start_location = sample(ncell(suitability(habs)),10),
             prob = 0.24,
             continue_to_burn_prob = 0.01)
              
fire_module <- as.module(fire_spread,module_params)    

## add module 
pop_hab_disp_experiments_w_module <- experiment(trans,habs,disp,fire_module)
# print method
print(population_experiments)

}
