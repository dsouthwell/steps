% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/population_dispersal-functions.R
\name{population_dispersal_functions}
\alias{population_dispersal_functions}
\alias{fast_dispersal}
\alias{kernel_dispersal}
\alias{cellular_automata_dispersal}
\title{How the population disperses in a landscape.}
\usage{

  fast_dispersal(dispersal_kernel = exponential_dispersal_kernel(distance_decay
  = 0.1), dispersal_proportion = 1)


  kernel_dispersal(dispersal_kernel = exponential_dispersal_kernel(distance_decay
  = 1), dispersal_distance = Inf, arrival_probability = c("both",
  "suitability", "carrying_capacity"), dispersal_proportion = 1)

cellular_automata_dispersal(dispersal_distance = Inf,
  dispersal_kernel = exponential_dispersal_kernel(distance_decay = 1),
  dispersal_proportion = 1, barrier_effect = c("obstructing",
  "lethal"), dispersal_steps = 1, barriers_map = NULL,
  arrival_probability = "suitability",
  carrying_capacity = "carrying_capacity")
}
\arguments{
\item{dispersal_kernel}{a single built-in or user-defined distance dispersal
kernel function}

\item{dispersal_proportion}{proportions of individuals (0 to 1) that can
disperse in each life stage}

\item{dispersal_distance}{the maximum distance that each life stage can
disperse in spatial units of the landscape (in kernel-based dispersal
this truncates the dispersal curve) - must be specified}

\item{arrival_probability}{the name of a raster layer in the landscape object
that controls where individuals can disperse to (e.g. habitat suitability)}

\item{barrier_effect}{if a barrier map is used, it either stops individuals
("obstructing" - default) or kills individuals ("lethal").}

\item{dispersal_steps}{the number of dispersal steps to take before stopping}

\item{barriers_map}{the name of a raster layer in the landscape object that
contains cell values of 0 (no barrier) and 1 (barrier).}

\item{carrying_capacity}{the name of a raster layer in the landscape object
that specifies the carrying capacity in each cell}
}
\description{
Pre-defined functions to define population dispersal during a simulation. Each dispersal method
uses different computing resources and may be applicable to different simulation scenarios.
}
\details{
The fast_dispersal function uses kernel-based dispersal
to modify the population with a user-defined diffusion distribution and
a fast-fourier transformation (FFT) computational algorithm. It is
computationally efficient and very fast, however, only useful for
situations where dispersal barriers or arrival based on habitat or
carrying capacity are not required. In other words, organisms
can disperse in all directions and to all cells in the landscape.

The kernel_dispersal function employs a probabilistic
kernel-based dispersal algorithm to modify the population
using a user-defined diffusion distribution, arrival
probability layers (e.g. habitat suitability), and growth
limiting layers (e.g. carrying capacity).

The cellular_automata_dispersal function modifies  
populations using rule-based cell movements. This function allows
the use of barriers in the landscape to influence dispersal.
}
\examples{

test_kern_dispersal <- fast_dispersal()

test_kern_dispersal <- kernel_dispersal()

test_ca_dispersal <- cellular_automata_dispersal()
}
