% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/habitat_dynamics-class.R
\name{as.habitat_dynamics}
\alias{as.habitat_dynamics}
\alias{is.habitat_dynamics}
\alias{print.habitat_dynamics}
\alias{no_habitat_dynamics}
\alias{fire_habitat_dynamics}
\title{Change the habitat in a state object}
\usage{
as.habitat_dynamics(habitat_dynamics_function)

is.habitat_dynamics(x)

\method{print}{habitat_dynamics}(x, ...)

no_habitat_dynamics()

fire_habitat_dynamics(habitat_suitability, disturbance_layers,
  effect_time = 1)
}
\arguments{
\item{habitat_dynamics_function}{A function that operates on a state object to change habitat at specified timesteps. User may enter a custom function or select a pre-defined module - see documentation.}

\item{x}{an object to print or test as an habitat_dynamic object}

\item{...}{further arguments passed to or from other methods}

\item{habitat_suitability}{a raster layer or stack containing habitat suitability for each cell}

\item{disturbance_layers}{a raster stack with fire disturbances used to alter the habitat object in the experiment (number of layers must match the intended timesteps in the experiment)}

\item{effect_time}{the number of timesteps that the disturbance layer will act on the habitat object}
}
\value{
An object of class \code{habitat_dynamics}
}
\description{
A 'habitat dynamics' object is used to modify habitat suitability (or carrying capacity) of a landscape in space and time.
It is a sub-component of a \link[steps]{dynamics} object and is executed in each timestep of an experiment.
}
\examples{

library(steps)
library(raster)

r <- raster(system.file("external/test.grd", package="raster"))

mat <- matrix(c(0.000,0.000,0.302,0.302,
                0.940,0.000,0.000,0.000,
                0.000,0.884,0.000,0.000,
                0.000,0.000,0.793,0.793),
              nrow = 4, ncol = 4, byrow = TRUE)
colnames(mat) <- rownames(mat) <- c('Stage_1','Stage_2','Stage_3','Stage_4')

pop <- stack(replicate(4, ceiling(r * 0.2)))

dist <- r*0

dist[sampleRandom(dist, size=100, na.rm=TRUE, sp=TRUE)] <- 1

test_habitat <- build_habitat(habitat_suitability = r / cellStats(r, "max"),
                              carrying_capacity = ceiling(r * 0.1))
test_demography <- build_demography(transition_matrix = mat,
                                    dispersal_parameters = rlnorm(1))
test_population <- build_population(pop)

test_state <- build_state(test_habitat, test_demography, test_population)

example_function <- function (state, timestep) {
  state
}

example_function <- as.habitat_dynamics(example_function)

# Test if object is of the type 'habitat dynamics'
  
is.habitat_dynamics(example_function)

print(example_function)

# Use the no_habitat_dynamics object as a placeholder as it 
# does not modify the habitat object:

habitat_dynamics <- no_habitat_dynamics()
test_state2 <- habitat_dynamics(test_state, 1)

identical(test_state, test_state2)

# Use the fire_habitat_dynamics object to modify the  
# habitat using spatial fire history:

test_state2 <- fire_habitat_dynamics(habitat_suitability = r / cellStats(r, "max"),
                                    disturbance_layers = dist,
                                    effect_time = 1)
}
